// Generated by CoffeeScript 1.6.3
var GitAction, GitSeed, fs, gitseed;

gitseed = require('gitseed');

fs = require('fs');

GitSeed = void 0;

module.exports = GitAction = {
  gotDirectory: function(directory) {
    var error;
    try {
      return fs.lstatSync(directory).isDirectory();
    } catch (_error) {
      error = _error;
      return false;
    }
  },
  isError: function() {
    return error === '';
  },
  showError: function() {
    return console.log(GitAction.error);
  },
  error: 'unknown or missing command',
  configure: function(program, notice) {
    return GitSeed = gitseed.create({
      notice: notice
    });
  },
  init: function() {
    if (typeof GitAction.task === 'undefined') {
      throw new Error('configure() was not called');
    }
    GitAction.task.notify.info.normal('start seed init', "recurse for git repositories in '" + GitAction.root + "'");
    GitAction.error = '';
    if (!GitAction.gotDirectory(GitAction.root + '/.git')) {
      GitAction.task.notify.info.bad('missing root repo', "no git reposititory in '" + GitAction.root + "'");
      return;
    }
    return GitSeed.init(GitAction.task, GitAction.root, GitAction.plugin);
  },
  status: function() {
    if (typeof GitAction.task === 'undefined') {
      throw new Error('configure() was not called');
    }
    GitAction.task.notify.info.normal('start seed status', "for all git repositories in '" + GitAction.root + "/.git-seed'");
    GitAction.error = '';
    return (new GitSeed(GitAction.task, GitAction.root, GitAction.plugin)).status();
  },
  clone: function() {
    if (typeof GitAction.task === 'undefined') {
      throw new Error('configure() was not called');
    }
    GitAction.task.notify.info.normal('start seed clone', "for all git repositories in '" + GitAction.root + "/.git-seed'");
    GitAction.error = '';
    return (new GitSeed(GitAction.task, GitAction.root, GitAction.plugin)).clone();
  },
  commit: function() {
    if (typeof GitAction.task === 'undefined') {
      throw new Error('configure() was not called');
    }
    GitAction.task.notify.info.normal('start seed commit', "for any git repositories with staged changes in '" + GitAction.root + "/.git-seed' ");
    GitAction.error = '';
    if (!GitAction.message) {
      GitAction.task.notify.info.bad('missing commit message', 'use -m "message"');
      return;
    }
    return (new GitSeed(GitAction.task, GitAction.root, GitAction.plugin)).commit(GitAction.message);
  },
  pull: function() {
    if (typeof GitAction.task === 'undefined') {
      throw new Error('configure() was not called');
    }
    GitAction.task.notify.info.normal('start seed pull', "for all git repositories in '" + GitAction.root + "/.git-seed'");
    GitAction.error = '';
    return (new GitSeed(GitAction.task, GitAction.root, GitAction.plugin)).pullRoot(function(error, result) {
      if (error == null) {
        return (new GitSeed(GitAction.task, GitAction.root, GitAction.plugin)).pull();
      }
    });
  }
};
