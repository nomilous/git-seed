// Generated by CoffeeScript 1.4.0
var GitAction, GitSeed, colors;

colors = require('colors');

GitSeed = require('nezkit').git.seed;

module.exports = GitAction = {
  isError: function() {
    return error === '';
  },
  showError: function() {
    return console.log(GitAction.error);
  },
  error: 'unknown or missing command',
  assign: function(program) {
    GitAction.root = program.root || '.';
    GitAction.message = program.message;
    GitAction.npmInstall = program.npmInstall || false;
    return GitAction;
  },
  init: function() {
    console.log('(init)'.bold, 'scanning for git repositories in', GitAction.root, '\n');
    GitAction.error = '';
    try {
      return GitSeed.init(GitAction.root);
    } catch (error) {
      console.log('(error) '.red + error.toString());
      return process.exit(GitAction.exitCode);
    }
  },
  status: function() {
    console.log('(status)'.bold, 'for all expected repositories in', GitAction.root, '\n');
    GitAction.error = '';
    try {
      return (new GitSeed(GitAction.root)).status();
    } catch (error) {
      console.log('(error) '.red + error.toString());
      return process.exit(GitAction.exitCode);
    }
  },
  clone: function() {
    console.log('(clone)'.bold, 'all missing repositories in', GitAction.root, '\n');
    GitAction.error = '';
    return (new GitSeed(GitAction.root)).clone(function(error, result) {
      if (error) {
        console.log('(error) '.red + error.toString());
        process.exit(4);
      }
      if (GitAction.npmInstall) {
        console.log('npm install');
      }
      return process.exit(0);
    });
  },
  commit: function() {
    console.log('(commit)'.bold, 'on all repositories', 'with staged changes'.bold, 'in', GitAction.root, '\n');
    GitAction.error = '';
    return (new GitSeed(GitAction.root)).commit(GitAction.message, function(error, result) {
      if (error) {
        console.log('(error) '.red + error.toString());
        process.exit(5);
      }
      return process.exit(0);
    });
  },
  push: function() {
    return GitAction.error = '';
  },
  pull: function() {
    return GitAction.error = '';
  }
};
