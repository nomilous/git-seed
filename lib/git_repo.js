// Generated by CoffeeScript 1.4.0
var Git, GitRepo, Shell;

Git = require('nez-kit').git;

Shell = require('nez-kit').shell;

GitRepo = (function() {

  GitRepo.init = function(workDir, seq) {
    return new GitRepo({
      root: seq === 0,
      path: workDir,
      origin: Git.showOrigin(workDir),
      branch: Git.showBranch(workDir),
      ref: Git.showRef(workDir)
    });
  };

  function GitRepo(properties) {
    var property;
    for (property in properties) {
      this[property] = properties[property];
      if (property === 'ref' && this.root) {
        this[property] = 'ROOT_REPO_REF';
      }
    }
  }

  GitRepo.prototype.printMissing = function() {
    console.log(("(MISSING) repo: " + this.path).red);
    return false;
  };

  GitRepo.prototype.printStatus = function() {
    var show, status;
    if (!Shell.gotDirectory(this.path + '/.git')) {
      return this.printMissing();
    }
    status = Git.showStatus(this.path, false);
    show = true;
    if (status.match(/nothing to commit \(working directory clean\)/)) {
      show = false;
    }
    if (status.match(/Your branch is ahead/)) {
      show = true;
    }
    if (show) {
      console.log('\n(change)'.green, this.path.bold);
      return console.log(status + '\n');
    } else {
      return console.log('(skip)'.green, "no change at " + this.path);
    }
  };

  GitRepo.prototype.clone = function(callback) {
    return Git.clone(this.path, this.origin, this.branch, callback);
  };

  GitRepo.prototype.commit = function(message, callback) {
    return Git.commit(this.path, this.branch, message, callback);
  };

  return GitRepo;

})();

module.exports = GitRepo;
