// Generated by CoffeeScript 1.4.0
var sync;

module.exports = sync = {
  series: function(targetsArray, functionName, args, finalCallback, stepCallback) {
    var results, target, targets, _i, _len;
    targets = [];
    for (_i = 0, _len = targetsArray.length; _i < _len; _i++) {
      target = targetsArray[_i];
      targets.push(target);
    }
    results = [];
    args.push(function(err, result) {
      results.push(result);
      if (err) {
        finalCallback(err, results);
      }
      if (typeof stepCallback === 'function') {
        stepCallback(err, result);
      }
      return sync.recurse(results, targets, functionName, args, finalCallback);
    });
    return sync.recurse(results, targets, functionName, args, finalCallback);
  },
  recurse: function(results, targets, fname, args, finalCallback) {
    var target;
    target = targets.shift();
    if (!target) {
      finalCallback(null, results);
      return;
    }
    return target[fname].apply(target, args);
  }
};
